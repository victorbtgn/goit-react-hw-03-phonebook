{"version":3,"sources":["Common/Container.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/Contacts/ContactItem.js","Components/Contacts/ContactList.js","Common/Section.js","App.js","index.js"],"names":["Container","children","className","ContactForm","state","name","number","inputChange","currentTarget","value","setState","createContact","evt","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","Component","Filter","filter","contactsLength","ContactItem","id","onDelete","onClick","ContactList","contacts","map","key","Section","title","defaultProps","App","addContact","find","contact","toaster","notify","duration","uuidv4","deleteContact","prevState","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","toLowerFilter","toLowerCase","visibleContacts","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c1980d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className=\"container\">\r\n    <div className=\"phonebook\">{children}</div>\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  inputChange = ({ currentTarget: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  createContact = evt => {\n    evt.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.createContact}>\n        <label>\n          Name *\n          <br />\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className=\"input\"\n            onChange={this.inputChange}\n          />\n        </label>\n        <br />\n        <label>\n          Phone number *\n          <br />\n          <input\n            type=\"tel\"\n            pattern=\"[0-9]{7}\"\n            name=\"number\"\n            value={number}\n            className=\"input\"\n            onChange={this.inputChange}\n          />\n        </label>\n        <br />\n        <button className=\"btn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, contactsLength, onChange }) => (\r\n  <>\r\n    {contactsLength > 1 && (\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          className=\"input\"\r\n          // placeholder=\"Phone number\"\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    )}\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  contactsLength: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ id, name, number, onDelete }) => (\r\n  <li className=\"list-item\">\r\n    <div className=\"list-item-data\">\r\n      <span>{name}:</span>\r\n      <span>\r\n        {number[0]}\r\n        {number[1]}\r\n        {number[2]}-{number[3]}\r\n        {number[4]}-{number[5]}\r\n        {number[6]}\r\n      </span>\r\n    </div>\r\n    <button className=\"btn\" type=\"button\" onClick={() => onDelete(id)}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport ContactItem from './ContactItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul className=\"list\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDelete={() => onDelete(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    {title && <h2 className=\"feedback-title\">{title}</h2>}\r\n\r\n    <section className=\"section\">{children}</section>\r\n  </>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Container from './Common/Container';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/Contacts/ContactList';\nimport Section from './Common/Section';\nimport toaster from 'toasted-notes';\nimport 'toasted-notes/src/styles.css';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  inputChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    const isExist = contacts.find(contact => contact.name === name);\n\n    if (isExist) {\n      toaster.notify(`${name} is already in contacts.`, {\n        duration: 5000,\n      });\n    } else if (!name || !number) {\n      toaster.notify('Please fill the form', {\n        duration: 5000,\n      });\n    } else {\n      const contact = {\n        id: uuidv4(),\n        name: name,\n        number: number,\n      };\n\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const toLowerFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(toLowerFilter),\n    );\n\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact} onChange={this.inputChange} />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter\n            filter={filter}\n            contactsLength={contacts.length}\n            onChange={this.inputChange}\n          />\n          <ContactList\n            contacts={visibleContacts}\n            onDelete={this.deleteContact}\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}